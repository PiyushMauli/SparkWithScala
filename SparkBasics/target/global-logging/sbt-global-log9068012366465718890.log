[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 11.0.11)
[debug]       Load.loadUnit: plugins took 241.7126ms
[debug]       Load.loadUnit: defsScala took 0.489ms
[debug] [Loading] Scanning directory C:\Users\ADMIN\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ADMIN\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 58.2051 ms
[debug]           Load.resolveProject(global-plugins) took 146.1418ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ADMIN\.sbt\1.0\plugins, plugins: List(<none>))) took 265.8303ms
[debug] [Loading] Done in C:\Users\ADMIN\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 317.3623ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.7403ms
[debug]     Load.loadUnit(file:/C:/Users/ADMIN/.sbt/1.0/plugins/, ...) took 580.6181ms
[debug]   Load.apply: load took 1035.558ms
[debug]   Load.apply: resolveProjects took 12.368ms
[debug]   Load.apply: finalTransforms took 131.8252ms
[debug]   Load.apply: config.delegates took 23.6314ms
[debug]   Load.apply: Def.make(settings)... took 1134.986ms
[debug]   Load.apply: structureIndex took 259.1207ms
[debug]   Load.apply: mkStreams took 5.4694ms
[info] loading global plugins from C:\Users\ADMIN\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7910.9071ms
[debug]           Load.loadUnit: plugins took 229.753ms
[debug]           Load.loadUnit: defsScala took 0.0103ms
[debug] [Loading] Scanning directory C:\SparkWithScala\SparkBasics\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.3606 ms
[debug]               Load.resolveProject(sparkbasics-build) took 3.2078ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkbasics-build, base: C:\SparkWithScala\SparkBasics\project, plugins: List(<none>))) took 15.8192ms
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics\project, returning: (sparkbasics-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 31.5121ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0339ms
[debug]         Load.loadUnit(file:/C:/SparkWithScala/SparkBasics/project/, ...) took 264.282ms
[debug]       Load.apply: load took 268.8071ms
[debug]       Load.apply: resolveProjects took 0.3267ms
[debug]       Load.apply: finalTransforms took 40.8489ms
[debug]       Load.apply: config.delegates took 0.982ms
[debug]       Load.apply: Def.make(settings)... took 327.1075ms
[debug]       Load.apply: structureIndex took 136.9293ms
[debug]       Load.apply: mkStreams took 0.0041ms
[info] loading project definition from C:\SparkWithScala\SparkBasics\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1803.4106ms
[debug]     Load.loadUnit: defsScala took 0.0072ms
[debug] [Loading] Scanning directory C:\SparkWithScala\SparkBasics
[debug]       Load.loadUnit: mkEval took 38.5878ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.477 ms
[info] loading settings for project sparkbasics from build.sbt ...
[debug]         Load.resolveProject(sparkbasics) took 11.9057ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sparkbasics, base: C:\SparkWithScala\SparkBasics, plugins: List(<none>))) took 28.9111ms
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics, returning: (sparkbasics)
[debug]     Load.loadUnit: loadedProjectsRaw took 527.2567ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.4356ms
[debug]   Load.loadUnit(file:/C:/SparkWithScala/SparkBasics/, ...) took 2349.53ms
[debug] Load.apply: load took 2352.8089ms
[debug] Load.apply: resolveProjects took 0.292ms
[debug] Load.apply: finalTransforms took 27.9044ms
[debug] Load.apply: config.delegates took 0.9013ms
[debug] Load.apply: Def.make(settings)... took 509.1192ms
[debug] Load.apply: structureIndex took 121.2378ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to SparkBasics (in build file:/C:/SparkWithScala/SparkBasics/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-ee5405f3b534d3247828
[debug] Writing bsp connection file
[info] started sbt server

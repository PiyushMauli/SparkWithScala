[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 11.0.11)
[debug]       Load.loadUnit: plugins took 264.8629ms
[debug]       Load.loadUnit: defsScala took 0.6678ms
[debug] [Loading] Scanning directory C:\Users\ADMIN\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ADMIN\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 89.8546 ms
[debug]           Load.resolveProject(global-plugins) took 128.9263ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ADMIN\.sbt\1.0\plugins, plugins: List(<none>))) took 285.8398ms
[debug] [Loading] Done in C:\Users\ADMIN\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 343.2572ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5664ms
[debug]     Load.loadUnit(file:/C:/Users/ADMIN/.sbt/1.0/plugins/, ...) took 647.0261ms
[debug]   Load.apply: load took 1052.9868ms
[debug]   Load.apply: resolveProjects took 13.1662ms
[debug]   Load.apply: finalTransforms took 150.0928ms
[debug]   Load.apply: config.delegates took 14.0909ms
[debug]   Load.apply: Def.make(settings)... took 906.6249ms
[debug]   Load.apply: structureIndex took 202.5213ms
[debug]   Load.apply: mkStreams took 2.5626ms
[info] loading global plugins from C:\Users\ADMIN\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6111.129ms
[debug]           Load.loadUnit: plugins took 65.0539ms
[debug]           Load.loadUnit: defsScala took 0.0079ms
[debug] [Loading] Scanning directory C:\SparkWithScala\SparkBasics\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0067 ms
[debug]               Load.resolveProject(sparkbasics-build) took 2.2874ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkbasics-build, base: C:\SparkWithScala\SparkBasics\project, plugins: List(<none>))) took 7.2802ms
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics\project, returning: (sparkbasics-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 10.5673ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0217ms
[debug]         Load.loadUnit(file:/C:/SparkWithScala/SparkBasics/project/, ...) took 77.0105ms
[debug]       Load.apply: load took 80.1064ms
[debug]       Load.apply: resolveProjects took 0.2361ms
[debug]       Load.apply: finalTransforms took 26.8031ms
[debug]       Load.apply: config.delegates took 0.764ms
[debug]       Load.apply: Def.make(settings)... took 217.8064ms
[debug]       Load.apply: structureIndex took 64.6438ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\SparkWithScala\SparkBasics\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 864.133ms
[debug]     Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\SparkWithScala\SparkBasics
[debug]       Load.loadUnit: mkEval took 13.9971ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4469 ms
[info] loading settings for project sparkbasics from build.sbt ...
[debug]         Load.resolveProject(sparkbasics) took 5.1972ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sparkbasics, base: C:\SparkWithScala\SparkBasics, plugins: List(<none>))) took 9.7841ms
[debug] [Loading] Done in C:\SparkWithScala\SparkBasics, returning: (sparkbasics)
[debug]     Load.loadUnit: loadedProjectsRaw took 297.6085ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.4219ms
[debug]   Load.loadUnit(file:/C:/SparkWithScala/SparkBasics/, ...) took 1175.3729ms
[debug] Load.apply: load took 1178.0172ms
[debug] Load.apply: resolveProjects took 0.2083ms
[debug] Load.apply: finalTransforms took 17.9259ms
[debug] Load.apply: config.delegates took 0.6822ms
[debug] Load.apply: Def.make(settings)... took 221.1703ms
[debug] Load.apply: structureIndex took 61.7401ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to SparkBasics (in build file:/C:/SparkWithScala/SparkBasics/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-ee5405f3b534d3247828
[debug] Writing bsp connection file
[info] started sbt server
